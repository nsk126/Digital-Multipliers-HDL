
// Generated by Cadence Genus(TM) Synthesis Solution 17.21-s010_1
// Generated on: May  2 2019 20:28:56 IST (May  2 2019 14:58:56 UTC)

// Verification Directory fv/Dadda 

module FA(sum, carryo, a, b, c);
  input a, b, c;
  output sum, carryo;
  wire a, b, c;
  wire sum, carryo;
  ADDFX1 g2(.A (c), .B (a), .CI (b), .CO (carryo), .S (sum));
endmodule

module FA_1(sum, carryo, a, b, c);
  input a, b, c;
  output sum, carryo;
  wire a, b, c;
  wire sum, carryo;
  ADDFX1 g2(.A (c), .B (a), .CI (b), .CO (carryo), .S (sum));
endmodule

module FA_2(sum, carryo, a, b, c);
  input a, b, c;
  output sum, carryo;
  wire a, b, c;
  wire sum, carryo;
  ADDFX1 g2(.A (c), .B (a), .CI (b), .CO (carryo), .S (sum));
endmodule

module FA_3(sum, carryo, a, b, c);
  input a, b, c;
  output sum, carryo;
  wire a, b, c;
  wire sum, carryo;
  ADDFX1 g2(.A (c), .B (a), .CI (b), .CO (carryo), .S (sum));
endmodule

module FA_5(sum, carryo, a, b, c);
  input a, b, c;
  output sum, carryo;
  wire a, b, c;
  wire sum, carryo;
  ADDFX1 g2(.A (c), .B (b), .CI (a), .CO (carryo), .S (sum));
endmodule

module FA_6(sum, carryo, a, b, c);
  input a, b, c;
  output sum, carryo;
  wire a, b, c;
  wire sum, carryo;
  ADDFX1 g2(.A (a), .B (b), .CI (c), .CO (carryo), .S (sum));
endmodule

module FA_7(sum, carryo, a, b, c);
  input a, b, c;
  output sum, carryo;
  wire a, b, c;
  wire sum, carryo;
  ADDFX1 g2(.A (b), .B (a), .CI (c), .CO (carryo), .S (sum));
endmodule

module FA_4(sum, carryo, a, b, c);
  input a, b, c;
  output sum, carryo;
  wire a, b, c;
  wire sum, carryo;
  ADDFX1 g2(.A (c), .B (b), .CI (a), .CO (carryo), .S (sum));
endmodule

module HA(sum, carryo, a, b);
  input a, b;
  output sum, carryo;
  wire a, b;
  wire sum, carryo;
  ADDHXL g18(.A (a), .B (b), .CO (carryo), .S (sum));
endmodule

module HA_1(sum, carryo, a, b);
  input a, b;
  output sum, carryo;
  wire a, b;
  wire sum, carryo;
  ADDHXL g18(.A (a), .B (b), .CO (carryo), .S (sum));
endmodule

module HA_2(sum, carryo, a, b);
  input a, b;
  output sum, carryo;
  wire a, b;
  wire sum, carryo;
  ADDHXL g18(.A (b), .B (a), .CO (carryo), .S (sum));
endmodule

module HA_3(sum, carryo, a, b);
  input a, b;
  output sum, carryo;
  wire a, b;
  wire sum, carryo;
  ADDHXL g18(.A (b), .B (a), .CO (carryo), .S (sum));
endmodule

module Dadda(op, a, b);
  input [3:0] a, b;
  output [7:0] op;
  wire [3:0] a, b;
  wire [7:0] op;
  wire [3:0] ppa2;
  wire [3:0] ppa1;
  wire [3:0] ppa0;
  wire [3:0] ppa3;
  wire s1w4_fac, s1w4_fas, s1w8_fac, s1w8_fas, s1w16_fac, s1w16_fas,
       s2w8_fac, s2w8_fas;
  wire s2w16_hac, s2w16_has, s2w32_fac, s2w32_fas, s3w2_hac, s3w4_hac,
       s3w8_hac, s3w16_fac;
  wire s3w32_fac;
  FA FA_stage1_w4(s1w4_fas, s1w4_fac, ppa2[0], ppa1[1], ppa0[2]);
  FA_1 FA_stage1_w8(s1w8_fas, s1w8_fac, ppa3[0], ppa2[1], ppa1[2]);
  FA_2 FA_stage1_w16(s1w16_fas, s1w16_fac, ppa3[1], ppa2[2], ppa1[3]);
  FA_3 FA_stage2_w8(s2w8_fas, s2w8_fac, s1w4_fac, s1w8_fas, ppa0[3]);
  FA_5 FA_stage3_w16(op[4], s3w16_fac, s2w8_fac, s2w16_has, s3w8_hac);
  FA_6 FA_stage3_w32(op[5], s3w32_fac, s2w16_hac, s2w32_fas, s3w16_fac);
  FA_7 FA_stage3_w64(op[6], op[7], s2w32_fac, ppa3[3], s3w32_fac);
  FA_4 Fa_stage2_w32(s2w32_fas, s2w32_fac, s1w16_fac, ppa3[2], ppa2[3]);
  HA HA_stage2_w16(s2w16_has, s2w16_hac, s1w8_fac, s1w16_fas);
  HA_1 HA_stage3_w2(op[1], s3w2_hac, ppa1[0], ppa0[1]);
  HA_2 HA_stage3_w4(op[2], s3w4_hac, s1w4_fas, s3w2_hac);
  HA_3 HA_stage3_w8(op[3], s3w8_hac, s2w8_fas, s3w4_hac);
  AND2X1 g113(.A (b[2]), .B (a[1]), .Y (ppa1[2]));
  AND2X1 g114(.A (b[0]), .B (a[1]), .Y (ppa1[0]));
  AND2X1 g115(.A (b[0]), .B (a[3]), .Y (ppa3[0]));
  AND2X1 g116(.A (b[3]), .B (a[2]), .Y (ppa2[3]));
  AND2XL g117(.A (b[0]), .B (a[0]), .Y (op[0]));
  AND2X1 g118(.A (b[2]), .B (a[2]), .Y (ppa2[2]));
  AND2X1 g119(.A (b[2]), .B (a[3]), .Y (ppa3[2]));
  AND2X1 g120(.A (b[1]), .B (a[0]), .Y (ppa0[1]));
  AND2X1 g121(.A (b[1]), .B (a[1]), .Y (ppa1[1]));
  AND2X1 g122(.A (b[3]), .B (a[1]), .Y (ppa1[3]));
  AND2X1 g123(.A (b[0]), .B (a[2]), .Y (ppa2[0]));
  AND2X1 g124(.A (b[2]), .B (a[0]), .Y (ppa0[2]));
  AND2X1 g125(.A (b[3]), .B (a[0]), .Y (ppa0[3]));
  AND2X1 g126(.A (b[3]), .B (a[3]), .Y (ppa3[3]));
  AND2X1 g127(.A (b[1]), .B (a[2]), .Y (ppa2[1]));
  AND2X1 g128(.A (b[1]), .B (a[3]), .Y (ppa3[1]));
endmodule

