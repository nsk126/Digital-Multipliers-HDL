catch { setAnalysisMode -analysisType onChipVariation }
catch { setAnalysisMode -checkType setup }
catch { setAnalysisMode -clkSrcPath true }
catch { setAnalysisMode -clockPropagation sdcControl }
catch { setAnalysisMode -cppr both }
catch { setAnalysisMode -usefulSkew true }
catch { setOptMode -activeHoldViews { Worst  } }
catch { setOptMode -activeSetupViews { Worst } }
catch { setOptMode -autoHoldViews { Worst } }
catch { setOptMode -autoSetupViews { Worst} }
catch { setOptMode -autoTDGRSetupViews { Worst} }
catch { setOptMode -autoViewHoldTargetSlack 0 }
catch { setOptMode -deleteInst true }
catch { setOptMode -drcMargin 0 }
catch { setOptMode -effort high }
catch { setOptMode -fixCap true }
catch { setOptMode -fixDrc true }
catch { setOptMode -fixFanoutLoad false }
catch { setOptMode -fixTran true }
catch { setOptMode -optimizeFF true }
catch { setOptMode -setupTargetSlack 0 }
setExtractRCMode  -engine postRoute -total_c_th 5 -relative_c_th 0.03 -coupling_c_th 3 -minNetTermNrToBeInMem 50
catch {setNanoRouteMode -quiet -drouteAntennaFactor 1.000000}
catch {setNanoRouteMode -quiet -droutePostRouteSpreadWire "auto"}
catch {setNanoRouteMode -quiet -drouteStartIteration 0}
catch {setNanoRouteMode -quiet -extractThirdPartyCompatible false}
catch {setNanoRouteMode -quiet -grouteExpTdStdDelay 35.800000}
catch {setNanoRouteMode -quiet -routeExpSignatureEco false}
catch {setNanoRouteMode -quiet -routeTdrEffort 7}
catch {setNanoRouteMode -quiet -routeWithSiDriven false}
catch {setNanoRouteMode -quiet -routeWithSiPostRouteFix false}
catch {setNanoRouteMode -quiet -routeWithTimingDriven true}
catch {setNanoRouteMode -quiet -timingEngine ""}

catch { setPlaceMode -place_design_floorplan_mode true }
catch { setIlmMode -keepHighFanoutPorts true -keepLoopBack false -keepFlatten true }
catch { setSrouteMode -viaConnectToShape noshape }
catch { setDelayCalMode -enable_high_fanout true }
catch { setDelayCalMode -eng_copyNetPropToNewNet true }
catch { setDelayCalMode -engine aae }
catch { setDelayCalMode -ignoreNetLoad false }
catch { setDelayCalMode -SIAware true }
catch { setPinAssignMode -pinEditInBatch false }
catch { setTrialRouteMode -handlePreroute true }
catch { setTrialRouteMode -keepMarkedOptRoutes true }
catch { setAddRingMode -avoid_short false }
catch { setAddRingMode -extend_over_row false }
catch { setAddRingMode -ignore_rows false }
catch { setAddRingMode -orthogonal_only true }
catch { setAddRingMode -ring_target default }
catch { setAddRingMode -skip_crossing_trunks none }
catch { setAddRingMode -skip_via_on_pin standardcell }
catch { setAddRingMode -skip_via_on_wire_shape noshape }
catch { setAddRingMode -stacked_via_bottom_layer Metal1 }
catch { setAddRingMode -stacked_via_top_layer Metal9 }
catch { setAddRingMode -via_using_exact_crossover_size true }
catch { setHierMode -disableArt false }
catch { setHierMode -reportPostRouteArtTiming false }
catch { setHierMode -trialRouteHonorReadOnly false }
catch { setSIMode -separate_delta_delay_on_data true }
catch { setAddStripeMode -allow_jog {padcore_ring block_ring} }
catch { setAddStripeMode -break_at none }
catch { setAddStripeMode -extend_to_closest_target none }
catch { setAddStripeMode -ignore_block_check false }
catch { setAddStripeMode -ignore_nondefault_domains false }
catch { setAddStripeMode -orthogonal_only true }
catch { setAddStripeMode -partial_set_thru_domain false }
catch { setAddStripeMode -route_over_rows_only false }
catch { setAddStripeMode -rows_without_stripes_only false }
catch { setAddStripeMode -spacing_from_block 0 }
catch { setAddStripeMode -spacing_type edge_to_edge }
catch { setAddStripeMode -split_vias false }
catch { setAddStripeMode -stacked_via_bottom_layer Metal1 }
catch { setAddStripeMode -stacked_via_top_layer Metal9 }
catch { setAddStripeMode -stop_at_last_wire_for_area false }
catch { setAddStripeMode -stripe_min_length stripe_width }
catch { setAddStripeMode -trim_antenna_back_to_shape none }
catch { setAddStripeMode -via_using_exact_crossover_size false }
catch { setRouteMode -earlyGlobalRouteSecondPG false }
