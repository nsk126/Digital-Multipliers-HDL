
// Generated by Cadence Genus(TM) Synthesis Solution 17.21-s010_1
// Generated on: May  4 2019 16:38:17 IST (May  4 2019 11:08:17 UTC)

// Verification Directory fv/Wallace 

module FA(sum, carryo, a, b, c);
  input a, b, c;
  output sum, carryo;
  wire a, b, c;
  wire sum, carryo;
  ADDFX1 g2(.A (a), .B (b), .CI (c), .CO (carryo), .S (sum));
endmodule

module FA_1(sum, carryo, a, b, c);
  input a, b, c;
  output sum, carryo;
  wire a, b, c;
  wire sum, carryo;
  ADDFX1 g2(.A (c), .B (b), .CI (a), .CO (carryo), .S (sum));
endmodule

module FA_2(sum, carryo, a, b, c);
  input a, b, c;
  output sum, carryo;
  wire a, b, c;
  wire sum, carryo;
  ADDFX1 g2(.A (c), .B (b), .CI (a), .CO (carryo), .S (sum));
endmodule

module FA_3(sum, carryo, a, b, c);
  input a, b, c;
  output sum, carryo;
  wire a, b, c;
  wire sum, carryo;
  ADDFX1 g2(.A (c), .B (a), .CI (b), .CO (carryo), .S (sum));
endmodule

module FA_4(sum, carryo, a, b, c);
  input a, b, c;
  output sum, carryo;
  wire a, b, c;
  wire sum, carryo;
  ADDFX1 g2(.A (c), .B (b), .CI (a), .CO (carryo), .S (sum));
endmodule

module FA_5(sum, carryo, a, b, c);
  input a, b, c;
  output sum, carryo;
  wire a, b, c;
  wire sum, carryo;
  ADDFX1 g2(.A (c), .B (b), .CI (a), .CO (carryo), .S (sum));
endmodule

module FA_6(sum, carryo, a, b, c);
  input a, b, c;
  output sum, carryo;
  wire a, b, c;
  wire sum, carryo;
  ADDFX1 g2(.A (c), .B (b), .CI (a), .CO (carryo), .S (sum));
endmodule

module FA_7(sum, carryo, a, b, c);
  input a, b, c;
  output sum, carryo;
  wire a, b, c;
  wire sum, carryo;
  ADDFX1 g2(.A (c), .B (b), .CI (a), .CO (carryo), .S (sum));
endmodule

module HA(sum, carryo, a, b);
  input a, b;
  output sum, carryo;
  wire a, b;
  wire sum, carryo;
  ADDHXL g18(.A (a), .B (b), .CO (carryo), .S (sum));
endmodule

module HA_1(sum, carryo, a, b);
  input a, b;
  output sum, carryo;
  wire a, b;
  wire sum, carryo;
  ADDHXL g18(.A (a), .B (b), .CO (carryo), .S (sum));
endmodule

module HA_2(sum, carryo, a, b);
  input a, b;
  output sum, carryo;
  wire a, b;
  wire sum, carryo;
  ADDHXL g18(.A (a), .B (b), .CO (carryo), .S (sum));
endmodule

module HA_3(sum, carryo, a, b);
  input a, b;
  output sum, carryo;
  wire a, b;
  wire sum, carryo;
  ADDHXL g18(.A (a), .B (b), .CO (carryo), .S (sum));
endmodule

module Wallace(a, b, op);
  input [3:0] a, b;
  output [7:0] op;
  wire [3:0] a, b;
  wire [7:0] op;
  wire [3:0] a2b;
  wire [3:0] a3b;
  wire [23:0] w;
  wire [3:0] a0b;
  wire [3:0] a1b;
  wire \w[0]_1 ;
  FA FA_a1(w[6], w[7], a2b[1], a3b[0], \w[0]_1 );
  FA_1 FA_a2(w[8], w[9], w[1], a3b[1], w[2]);
  FA_2 FA_a3(w[10], w[11], w[3], a2b[3], a3b[2]);
  FA_3 FA_a4(op[2], w[15], a2b[0], w[4], w[13]);
  FA_4 FA_a5(op[3], w[17], w[15], w[5], w[6]);
  FA_5 FA_a6(op[4], w[19], w[17], w[7], w[8]);
  FA_6 FA_a7(op[5], w[21], w[19], w[9], w[10]);
  FA_7 FA_a8(op[6], op[7], w[21], w[11], a3b[3]);
  HA HA_a1(\w[0]_1 , w[1], a0b[3], a1b[2]);
  HA_1 HA_a2(w[2], w[3], a2b[2], a1b[3]);
  HA_2 HA_a3(w[4], w[5], a0b[2], a1b[1]);
  HA_3 HA_a4(op[1], w[13], a0b[1], a1b[0]);
  AND2X1 g113(.A (b[2]), .B (a[1]), .Y (a1b[2]));
  AND2X1 g114(.A (b[0]), .B (a[1]), .Y (a1b[0]));
  AND2X1 g115(.A (b[0]), .B (a[3]), .Y (a3b[0]));
  AND2X1 g116(.A (b[3]), .B (a[2]), .Y (a2b[3]));
  AND2XL g117(.A (b[0]), .B (a[0]), .Y (op[0]));
  AND2X1 g118(.A (b[2]), .B (a[2]), .Y (a2b[2]));
  AND2X1 g119(.A (b[2]), .B (a[3]), .Y (a3b[2]));
  AND2X1 g120(.A (b[1]), .B (a[0]), .Y (a0b[1]));
  AND2X1 g121(.A (b[1]), .B (a[1]), .Y (a1b[1]));
  AND2X1 g122(.A (b[3]), .B (a[1]), .Y (a1b[3]));
  AND2X1 g123(.A (b[0]), .B (a[2]), .Y (a2b[0]));
  AND2X1 g124(.A (b[2]), .B (a[0]), .Y (a0b[2]));
  AND2X1 g125(.A (b[3]), .B (a[0]), .Y (a0b[3]));
  AND2X1 g126(.A (b[3]), .B (a[3]), .Y (a3b[3]));
  AND2X1 g127(.A (b[1]), .B (a[2]), .Y (a2b[1]));
  AND2X1 g128(.A (b[1]), .B (a[3]), .Y (a3b[1]));
endmodule

