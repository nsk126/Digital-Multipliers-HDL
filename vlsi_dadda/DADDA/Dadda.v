/*
###############################################################
#  Generated by:      Cadence Innovus 17.13-s098_1
#  OS:                Linux x86_64(Host ID cadence)
#  Generated on:      Thu May  2 22:51:04 2019
#  Design:            Dadda
#  Command:           saveNetlist Dadda.v
###############################################################
*/
// Generated by Cadence Genus(TM) Synthesis Solution 17.21-s010_1
// Generated on: May  2 2019 22:25:38 IST (May  2 2019 16:55:38 UTC)
// Verification Directory fv/Dadda 
module FA (
	sum, 
	carryo, 
	a, 
	b, 
	c);
   output sum;
   output carryo;
   input a;
   input b;
   input c;

   ADDFX1 g2 (.A(c),
	.B(a),
	.CI(b),
	.CO(carryo),
	.S(sum));
endmodule

module FA_1 (
	sum, 
	carryo, 
	a, 
	b, 
	c);
   output sum;
   output carryo;
   input a;
   input b;
   input c;

   ADDFX1 g2 (.A(c),
	.B(a),
	.CI(b),
	.CO(carryo),
	.S(sum));
endmodule

module FA_2 (
	sum, 
	carryo, 
	a, 
	b, 
	c);
   output sum;
   output carryo;
   input a;
   input b;
   input c;

   ADDFX1 g2 (.A(c),
	.B(a),
	.CI(b),
	.CO(carryo),
	.S(sum));
endmodule

module FA_3 (
	sum, 
	carryo, 
	a, 
	b, 
	c);
   output sum;
   output carryo;
   input a;
   input b;
   input c;

   ADDFX1 g2 (.A(c),
	.B(a),
	.CI(b),
	.CO(carryo),
	.S(sum));
endmodule

module FA_5 (
	sum, 
	carryo, 
	a, 
	b, 
	c);
   output sum;
   output carryo;
   input a;
   input b;
   input c;

   ADDFX1 g2 (.A(c),
	.B(b),
	.CI(a),
	.CO(carryo),
	.S(sum));
endmodule

module FA_6 (
	sum, 
	carryo, 
	a, 
	b, 
	c);
   output sum;
   output carryo;
   input a;
   input b;
   input c;

   ADDFX1 g2 (.A(a),
	.B(b),
	.CI(c),
	.CO(carryo),
	.S(sum));
endmodule

module FA_7 (
	sum, 
	carryo, 
	a, 
	b, 
	c);
   output sum;
   output carryo;
   input a;
   input b;
   input c;

   ADDFX1 g2 (.A(b),
	.B(a),
	.CI(c),
	.CO(carryo),
	.S(sum));
endmodule

module FA_4 (
	sum, 
	carryo, 
	a, 
	b, 
	c);
   output sum;
   output carryo;
   input a;
   input b;
   input c;

   ADDFX1 g2 (.A(c),
	.B(b),
	.CI(a),
	.CO(carryo),
	.S(sum));
endmodule

module HA (
	sum, 
	carryo, 
	a, 
	b);
   output sum;
   output carryo;
   input a;
   input b;

   ADDHXL g18 (.A(a),
	.B(b),
	.CO(carryo),
	.S(sum));
endmodule

module HA_1 (
	sum, 
	carryo, 
	a, 
	b);
   output sum;
   output carryo;
   input a;
   input b;

   ADDHXL g18 (.A(a),
	.B(b),
	.CO(carryo),
	.S(sum));
endmodule

module HA_2 (
	sum, 
	carryo, 
	a, 
	b);
   output sum;
   output carryo;
   input a;
   input b;

   ADDHXL g18 (.A(b),
	.B(a),
	.CO(carryo),
	.S(sum));
endmodule

module HA_3 (
	sum, 
	carryo, 
	a, 
	b);
   output sum;
   output carryo;
   input a;
   input b;

   ADDHXL g18 (.A(b),
	.B(a),
	.CO(carryo),
	.S(sum));
endmodule

module Dadda (
	op, 
	a, 
	b);
   output [7:0] op;
   input [3:0] a;
   input [3:0] b;

   // Internal wires
   wire [3:0] ppa2;
   wire [3:0] ppa1;
   wire [3:0] ppa0;
   wire [3:0] ppa3;
   wire s1w4_fac;
   wire s1w4_fas;
   wire s1w8_fac;
   wire s1w8_fas;
   wire s1w16_fac;
   wire s1w16_fas;
   wire s2w8_fac;
   wire s2w8_fas;
   wire s2w16_hac;
   wire s2w16_has;
   wire s2w32_fac;
   wire s2w32_fas;
   wire s3w2_hac;
   wire s3w4_hac;
   wire s3w8_hac;
   wire s3w16_fac;
   wire s3w32_fac;

   FA FA_stage1_w4 (.sum(s1w4_fas),
	.carryo(s1w4_fac),
	.a(ppa2[0]),
	.b(ppa1[1]),
	.c(ppa0[2]));
   FA_1 FA_stage1_w8 (.sum(s1w8_fas),
	.carryo(s1w8_fac),
	.a(ppa3[0]),
	.b(ppa2[1]),
	.c(ppa1[2]));
   FA_2 FA_stage1_w16 (.sum(s1w16_fas),
	.carryo(s1w16_fac),
	.a(ppa3[1]),
	.b(ppa2[2]),
	.c(ppa1[3]));
   FA_3 FA_stage2_w8 (.sum(s2w8_fas),
	.carryo(s2w8_fac),
	.a(s1w4_fac),
	.b(s1w8_fas),
	.c(ppa0[3]));
   FA_5 FA_stage3_w16 (.sum(op[4]),
	.carryo(s3w16_fac),
	.a(s2w8_fac),
	.b(s2w16_has),
	.c(s3w8_hac));
   FA_6 FA_stage3_w32 (.sum(op[5]),
	.carryo(s3w32_fac),
	.a(s2w16_hac),
	.b(s2w32_fas),
	.c(s3w16_fac));
   FA_7 FA_stage3_w64 (.sum(op[6]),
	.carryo(op[7]),
	.a(s2w32_fac),
	.b(ppa3[3]),
	.c(s3w32_fac));
   FA_4 Fa_stage2_w32 (.sum(s2w32_fas),
	.carryo(s2w32_fac),
	.a(s1w16_fac),
	.b(ppa3[2]),
	.c(ppa2[3]));
   HA HA_stage2_w16 (.sum(s2w16_has),
	.carryo(s2w16_hac),
	.a(s1w8_fac),
	.b(s1w16_fas));
   HA_1 HA_stage3_w2 (.sum(op[1]),
	.carryo(s3w2_hac),
	.a(ppa1[0]),
	.b(ppa0[1]));
   HA_2 HA_stage3_w4 (.sum(op[2]),
	.carryo(s3w4_hac),
	.a(s1w4_fas),
	.b(s3w2_hac));
   HA_3 HA_stage3_w8 (.sum(op[3]),
	.carryo(s3w8_hac),
	.a(s2w8_fas),
	.b(s3w4_hac));
   AND2X1 g113 (.A(b[2]),
	.B(a[1]),
	.Y(ppa1[2]));
   AND2X1 g114 (.A(b[0]),
	.B(a[1]),
	.Y(ppa1[0]));
   AND2X1 g115 (.A(b[0]),
	.B(a[3]),
	.Y(ppa3[0]));
   AND2X1 g116 (.A(b[3]),
	.B(a[2]),
	.Y(ppa2[3]));
   AND2XL g117 (.A(b[0]),
	.B(a[0]),
	.Y(op[0]));
   AND2X1 g118 (.A(b[2]),
	.B(a[2]),
	.Y(ppa2[2]));
   AND2X1 g119 (.A(b[2]),
	.B(a[3]),
	.Y(ppa3[2]));
   AND2X1 g120 (.A(b[1]),
	.B(a[0]),
	.Y(ppa0[1]));
   AND2X1 g121 (.A(b[1]),
	.B(a[1]),
	.Y(ppa1[1]));
   AND2X1 g122 (.A(b[3]),
	.B(a[1]),
	.Y(ppa1[3]));
   AND2X1 g123 (.A(b[0]),
	.B(a[2]),
	.Y(ppa2[0]));
   AND2X1 g124 (.A(b[2]),
	.B(a[0]),
	.Y(ppa0[2]));
   AND2X1 g125 (.A(b[3]),
	.B(a[0]),
	.Y(ppa0[3]));
   AND2X1 g126 (.A(b[3]),
	.B(a[3]),
	.Y(ppa3[3]));
   AND2X1 g127 (.A(b[1]),
	.B(a[2]),
	.Y(ppa2[1]));
   AND2X1 g128 (.A(b[1]),
	.B(a[3]),
	.Y(ppa3[1]));
endmodule

